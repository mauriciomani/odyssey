import pickle
import os
import pandas as pd

# Is important not to change the name to the file. Keep it serve.py

# We try to create a singleton for holding the model. This simply loads the model and holds it.
# It has a predict function that does a prediction based on the model and the input data.


def get_model(model_save_path):
    """
    This function imports the model(s) generated by the train.py file.
    Please add model name. Remember is not necessary to have only one model but can import multiple.
    Return models if more than 1 as a list of models.
    Parameters
    ----------
    model_save_path : str
        Place where model is stored
    
    Returns
    -------
    ML object
        Use any python ML library
    """
    model_name = "logistic_regression.pkl"
    model_path = os.path.join(model_save_path, model_name)
    loaded_model = pickle.load(open(model_path, "rb"))
    return(loaded_model)


# We return a pandas dataframe, might work with dask, if other data object change predictor.py

def predict(input_data, model):
    """
    This functions is used to predict input_data using model.
    Predictions are returned to be used, can either be json, csv, parquet, float or any data type.
    Parameters
    ----------
    inut_data : json | csv | parquet 
        can be either single or batch transform
    model : ML object
        imported by import_models
    
    Returns
    -------
    json | csv | float
        Any file that fit needs
    """
    X = input_data.iloc[:, :4]
    predictions = model.predict(X)
    predictions = pd.DataFrame(predictions)
    return(predictions)
    